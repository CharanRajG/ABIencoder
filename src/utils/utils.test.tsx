import { Parameters } from '../interfaces';

import { encode } from './index';

describe("utils/encode", () => {
    test("encode arrays", () => {
        const parameters: Parameters = {
            type: "",
            funcName: "vestTokens",
            inputs: [{
                type: "address",
                value: "0x6b7ccd19b78f57efaa89e6291b8834831c2f539f",
            }, {
                type: "uint256",
                value: "55248089600000000000000000"
            }, {
                type: "uint256[]",
                value: "[550, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 650]"
            }, {
                type: "uint256[]",
                value: "[1634405944, 1647452344, 1663349944, 1678914000, 1694811600, 1710536400, 1726434000, 1742072400, 1757970000, 1773608400]"
            }, {
                type: "address",
                value: "0x547429ded38650aaab97cfe999288ee04bd4e6aa"
            }, {
                type: "uint8",
                value: "4"
            }]
        }

        const res = encode(parameters);
        const errors = res.errors.filter(Boolean); 
        expect(errors.length).toEqual(0);
        expect(res.encoded).toEqual("3b1b95cb0000000000000000000000006b7ccd19b78f57efaa89e6291b8834831c2f539f0000000000000000000000000000000000000000002db33cf0418404a500000000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000220000000000000000000000000547429ded38650aaab97cfe999288ee04bd4e6aa0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000226000000000000000000000000000000000000000000000000000000000000044c000000000000000000000000000000000000000000000000000000000000044c000000000000000000000000000000000000000000000000000000000000044c000000000000000000000000000000000000000000000000000000000000044c000000000000000000000000000000000000000000000000000000000000044c000000000000000000000000000000000000000000000000000000000000044c000000000000000000000000000000000000000000000000000000000000044c000000000000000000000000000000000000000000000000000000000000044c000000000000000000000000000000000000000000000000000000000000028a000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000616b0e3800000000000000000000000000000000000000000000000000000000623220b8000000000000000000000000000000000000000000000000000000006324b4b800000000000000000000000000000000000000000000000000000000641231d0000000000000000000000000000000000000000000000000000000006504c5d00000000000000000000000000000000000000000000000000000000065f4b6d00000000000000000000000000000000000000000000000000000000066e74ad00000000000000000000000000000000000000000000000000000000067d5ea500000000000000000000000000000000000000000000000000000000068c87e500000000000000000000000000000000000000000000000000000000069b71dd0")
    })
})